#!/usr/bin/env python
# -*- coding:utf-8 -*-

"""
    File Name: online_feat_seg_main.py
    Description:
    
Created by Yong Bai on 2019/9/23 2:25 PM.
"""

import os
import argparse
import logging
import sys

sys.path.append("..")
from online_feat_gen import OnlineFeatSegOpt

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)


def main(args):

    sample_id = args.sample_id
    chr_id = args.chr_id

    min_ratio = args.min_ratio
    win_size = args.win_size
    step_size = args.step_size
    n_features = args.n_features
    ref_fa_f = args.ref_fa_f
    online_out_root_dir = args.online_out_root_dir

    online_out_sample_subdir = os.path.join(online_out_root_dir, sample_id)
    if not os.path.isdir(online_out_sample_subdir):
        os.mkdir(online_out_sample_subdir)
    online_out_sample_data_dir = os.path.join(online_out_sample_subdir, 'data')
    if not os.path.isdir(online_out_sample_data_dir):
        os.mkdir(online_out_sample_data_dir)

    # this was generated by STEP 20
    in_online_sample_data_fn = os.path.join(online_out_sample_data_dir,
                                            '{}_chr{}_features_whole.npz'.format(sample_id, chr_id))

    out_feat_segs_fn = os.path.join(
        online_out_sample_data_dir,
        'win{0}_step{1}_r{2:.2f}_chr{3}_features_seg.npz'.format(win_size, step_size, min_ratio, chr_id))

    online_feat_obj = OnlineFeatSegOpt(sample_id, chr_id, win_size, in_online_sample_data_fn)
    online_feat_obj.cal_feat_segs(
        ref_fa_f, out_feat_segs_fn,
        n_features=n_features, min_r=min_ratio, stride_size=step_size)

    logger.info('Done, whole features for {} chr {} saving at {}'.format(
        sample_id, chr_id, out_feat_segs_fn))


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Generate online feature segmentation for whole chromosome')

    parser.add_argument(
        "-s",
        "--sample_id",
        type=str,
        help="input sample id",
        required=True)

    parser.add_argument(
        "-c",
        "--chr_id",
        type=str,
        default='A',
        help="chromosome id, provide like '1'")

    parser.add_argument(
        "-w",
        "--win_size",
        type=int,
        default=1000,
        help='window size. This will be hyperparamter')

    parser.add_argument(
        "-r",
        '--min_ratio',
        type=float,
        default=0.1,
        help="cnv region that has read coverage less than the ratio will be filtered out. This will be hyperparameter")

    parser.add_argument(
        "-p",
        "--step_size",
        type=int,
        default=200,
        help="step size when sliding window")

    parser.add_argument(
        "-u",
        "--n_features",
        type=int,
        default=13,
        help="the number of features")

    parser.add_argument(
        "-o",
        "--online_out_root_dir",
        type=str,
        default='/zfssz2/ST_MCHRI/BIGDATA/PROJECT/NIPT_CNV/f_cnv_out/online',
        help="online output directory")

    parser.add_argument("-f", '--ref_fa_f', type=str, help='reference fasta file')
    args = parser.parse_args()
    logger.info('input parameters: {}'.format(args))
    main(args)